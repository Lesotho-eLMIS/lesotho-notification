#%RAML 0.8
title: OpenLMIS Notification API
version: "@version@"
baseUri: "@baseUrl@"
protocols: [ HTTP, HTTPS ]

schemas:
    - notification: !include schemas/notification.json
    - userContactDetails: !include schemas/userContactDetails.json
    - emailVerificationToken: !include schemas/emailVerificationToken.json
    - errorResponse: !include schemas/errorResponse.json

traits:
    - secured:
          queryParameters:
              access_token:
                  displayName: access_token
                  description: OAuth2 access token
                  type: string
                  required: false
                  repeat: false
          headers:
              Authorization:
                  displayName: Authorization
                  description: OAuth2 authorization token header. Takes the form of 'Bearer <token>'.
                  type: string
                  required: false
                  repeat: false

/api:
  /notifications:
      displayName: Notification
      post:
          is: [ secured ]
          description: Send a notification to the given user with provided messages.
          body:
              application/json:
                  schema: notification
          responses:
              200:
                  description: The notification request has been accepted and sent to the given user.
              401:
                  description: The request does not contain a token.
              403:
                  description: The request is invalid.
                  body:
                      application/json:
                          schema: errorResponse
              400:
                  description: The request body is incorrect
                  body:
                      application/json:
                          schema: errorResponse
  /userContactDetails:
      displayName: User Contact Details
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Get user contact details.
              responses:
                  200:
                      body:
                          application/json:
                              schema: userContactDetails
                  404:
                      body:
                          application/json:
                              schema: errorResponse
                  403:
                      body:
                          application/json:
                              schema: errorResponse
          put:
              is: [ secured ]
              description: Update user contact details.
              body:
                  application/json:
                      schema: userContactDetails
              responses:
                  200:
                      body:
                          application/json:
                              schema: userContactDetails
                  400:
                      body:
                          application/json:
                              schema: errorResponse
                  403:
                      body:
                          application/json:
                              schema: errorResponse
          /verifications:
              get:
                  is: [ secured ]
                  description: Get pending verification for a user.
                  responses:
                      200:
                          description: Get pending verifications for the given user
                          body:
                              application/json:
                                  schema: emailVerificationToken
                      404:
                          description: User contact details with the given id does not exist.
                          body:
                              application/json:
                                  schema: errorResponse
                      403:
                          description: The current logged user has no permission to perform action.
                          body:
                              application/json:
                                  schema: errorResponse
              post:
                  is: [ secured ]
                  description: Resend verification for the current user.
                  responses:
                      200:
                          description: Verification has been sent
                      400:
                          description: There were issues with sending verification.
                          body:
                              application/json:
                                  schema: errorResponse
                      404:
                          description: User contact details with the given id does not exist.
                          body:
                              application/json:
                                  schema: errorResponse
                      403:
                          description: The current logged user has no permission to perform action.
                          body:
                              application/json:
                                  schema: errorResponse
              /{token}:
                  get:
                      description: Verifies the given email address
                      responses:
                         200:
                             description: Email verified successfully
                             body:
                                 text/plain;charset=UTF-8:
                         400:
                             description: There were issues with email verification.
                             body:
                                 application/json:
                                    schema: errorResponse
